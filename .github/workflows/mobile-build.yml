name: Mobile Build

on:
  push:
    branches: [main, mobile]
    paths:
      - "apps/mobile/**"
      - "packages/core/**"
      - "packages/state/**"
      - ".github/workflows/mobile-build.yml"
  pull_request:
    branches: [main]
    paths:
      - "apps/mobile/**"
      - "packages/core/**"
      - "packages/state/**"
      - ".github/workflows/mobile-build.yml"

jobs:
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Run setup script
        run: cd apps/mobile && ./setup.sh

      - name: Build Android app
        run: cd apps/mobile && npm run build:android

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: apps/mobile/android/app/build/outputs/apk/release/

  build-ios:
    name: Build iOS App
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Cache CocoaPods
        uses: actions/cache@v3
        with:
          path: apps/mobile/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('apps/mobile/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Run setup script
        run: cd apps/mobile && ./setup.sh

      # This is a basic build for demonstration
      # For a real setup, we would need code signing setup
      - name: Build iOS app (Development)
        run: cd apps/mobile && npm run build:ios -- -workspace mobile.xcworkspace -scheme mobile -configuration Debug -sdk iphonesimulator -derivedDataPath build

      - name: Upload IPA
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: apps/mobile/ios/build/Build/Products/Debug-iphonesimulator/*.app
